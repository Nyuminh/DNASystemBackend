// <auto-generated />
using System;
using DNASystemBackend.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DNASystemBackend.Migrations
{
    [DbContext(typeof(DnasystemContext))]
    [Migration("20250623193715_FixMissingColumns")]
    partial class FixMissingColumns
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DNASystemBackend.Models.Booking", b =>
                {
                    b.Property<string>("BookingId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("bookingID");

                    b.Property<string>("Address")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("address");

                    b.Property<string>("CustomerId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("customerID");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime")
                        .HasColumnName("date");

                    b.Property<string>("Method")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("method");

                    b.Property<string>("ServiceId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("serviceID");

                    b.Property<string>("StaffId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("staffID");

                    b.HasKey("BookingId")
                        .HasName("PK__Booking__C6D03BED7DEC36F2");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ServiceId");

                    b.HasIndex("StaffId");

                    b.ToTable("Booking", (string)null);
                });

            modelBuilder.Entity("DNASystemBackend.Models.Course", b =>
                {
                    b.Property<string>("CourseId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("courseID");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime")
                        .HasColumnName("date");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("Image")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("image");

                    b.Property<string>("ManagerId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("managerID");

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("title");

                    b.HasKey("CourseId")
                        .HasName("PK__Course__2AA84FF1DBECDE9A");

                    b.HasIndex("ManagerId");

                    b.ToTable("Course", (string)null);
                });

            modelBuilder.Entity("DNASystemBackend.Models.Feedback", b =>
                {
                    b.Property<string>("FeedbackId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("feedbackID");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("comment");

                    b.Property<string>("CustomerId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("customerID");

                    b.Property<int?>("Rating")
                        .HasColumnType("int")
                        .HasColumnName("rating");

                    b.Property<string>("ServiceId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("serviceID");

                    b.HasKey("FeedbackId")
                        .HasName("PK__Feedback__2613FDC4B749BF2C");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ServiceId");

                    b.ToTable("Feedback", (string)null);
                });

            modelBuilder.Entity("DNASystemBackend.Models.Invoice", b =>
                {
                    b.Property<string>("InvoiceId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("invoiceID");

                    b.Property<string>("BookingId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("bookingID");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime")
                        .HasColumnName("date");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("price");

                    b.HasKey("InvoiceId")
                        .HasName("PK__Invoice__1252410C4834CE8B");

                    b.HasIndex("BookingId");

                    b.ToTable("Invoice", (string)null);
                });

            modelBuilder.Entity("DNASystemBackend.Models.InvoiceDetail", b =>
                {
                    b.Property<string>("InvoicedetailId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("invoicedetailID");

                    b.Property<string>("InvoiceId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("invoiceID");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.Property<string>("ServiceId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("serviceID");

                    b.HasKey("InvoicedetailId")
                        .HasName("PK__InvoiceD__FDA5DC32D84EADAB");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("ServiceId");

                    b.ToTable("InvoiceDetail", (string)null);
                });

            modelBuilder.Entity("DNASystemBackend.Models.Kit", b =>
                {
                    b.Property<string>("KitId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("kitID");

                    b.Property<string>("CustomerId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("customerID");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<DateTime?>("Receivedate")
                        .HasColumnType("datetime")
                        .HasColumnName("receivedate");

                    b.Property<string>("StaffId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("staffID");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("status");

                    b.HasKey("KitId")
                        .HasName("PK__Kit__98C65C8066A586FD");

                    b.HasIndex("CustomerId");

                    b.HasIndex("StaffId");

                    b.ToTable("Kit", (string)null);
                });

            modelBuilder.Entity("DNASystemBackend.Models.Role", b =>
                {
                    b.Property<string>("RoleId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("roleID");

                    b.Property<string>("Rolename")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("rolename");

                    b.HasKey("RoleId")
                        .HasName("PK__Role__CD98460AF905C65E");

                    b.ToTable("Role", (string)null);
                });

            modelBuilder.Entity("DNASystemBackend.Models.Service", b =>
                {
                    b.Property<string>("ServiceId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("serviceID");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Image")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("image");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("price");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("type");

                    b.HasKey("ServiceId")
                        .HasName("PK__Service__4550733FEB577886");

                    b.ToTable("Service", (string)null);
                });

            modelBuilder.Entity("DNASystemBackend.Models.TestResult", b =>
                {
                    b.Property<string>("ResultId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("resultID");

                    b.Property<string>("CustomerId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("customerID");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime")
                        .HasColumnName("date");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("ServiceId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("serviceID");

                    b.Property<string>("StaffId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("staffID");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("status");

                    b.HasKey("ResultId")
                        .HasName("PK__TestResu__C6EADC7BB3693170");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ServiceId");

                    b.HasIndex("StaffId");

                    b.ToTable("TestResult", (string)null);
                });

            modelBuilder.Entity("DNASystemBackend.Models.User", b =>
                {
                    b.Property<string>("UserId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("userID");

                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("address");

                    b.Property<DateOnly?>("Birthdate")
                        .HasColumnType("date")
                        .HasColumnName("birthdate");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("email");

                    b.Property<string>("Fullname")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fullname");

                    b.Property<string>("Gender")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("gender");

                    b.Property<string>("Image")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("image");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("password");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("phone");

                    b.Property<string>("RoleId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("roleID");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("username");

                    b.HasKey("UserId")
                        .HasName("PK__Users__CB9A1CDFE783B793");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DNASystemBackend.Models.Booking", b =>
                {
                    b.HasOne("DNASystemBackend.Models.User", "Customer")
                        .WithMany("BookingCustomers")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK__Booking__custome__48CFD27E");

                    b.HasOne("DNASystemBackend.Models.Service", "Service")
                        .WithMany("Bookings")
                        .HasForeignKey("ServiceId")
                        .HasConstraintName("FK__Booking__service__49C3F6B7");

                    b.HasOne("DNASystemBackend.Models.User", "Staff")
                        .WithMany("BookingStaffs")
                        .HasForeignKey("StaffId")
                        .HasConstraintName("FK__Booking__staffID__4AB81AF0");

                    b.Navigation("Customer");

                    b.Navigation("Service");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("DNASystemBackend.Models.Course", b =>
                {
                    b.HasOne("DNASystemBackend.Models.User", "Manager")
                        .WithMany("Courses")
                        .HasForeignKey("ManagerId")
                        .HasConstraintName("FK__Course__managerI__4BAC3F29");

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("DNASystemBackend.Models.Feedback", b =>
                {
                    b.HasOne("DNASystemBackend.Models.User", "Customer")
                        .WithMany("Feedbacks")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK__Feedback__custom__4CA06362");

                    b.HasOne("DNASystemBackend.Models.Service", "Service")
                        .WithMany("Feedbacks")
                        .HasForeignKey("ServiceId")
                        .HasConstraintName("FK__Feedback__servic__4D94879B");

                    b.Navigation("Customer");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("DNASystemBackend.Models.Invoice", b =>
                {
                    b.HasOne("DNASystemBackend.Models.Booking", "Booking")
                        .WithMany("Invoices")
                        .HasForeignKey("BookingId")
                        .HasConstraintName("FK__Invoice__booking__4E88ABD4");

                    b.Navigation("Booking");
                });

            modelBuilder.Entity("DNASystemBackend.Models.InvoiceDetail", b =>
                {
                    b.HasOne("DNASystemBackend.Models.Invoice", "Invoice")
                        .WithMany("InvoiceDetails")
                        .HasForeignKey("InvoiceId")
                        .HasConstraintName("FK__InvoiceDe__invoi__4F7CD00D");

                    b.HasOne("DNASystemBackend.Models.Service", "Service")
                        .WithMany("InvoiceDetails")
                        .HasForeignKey("ServiceId")
                        .HasConstraintName("FK__InvoiceDe__servi__5070F446");

                    b.Navigation("Invoice");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("DNASystemBackend.Models.Kit", b =>
                {
                    b.HasOne("DNASystemBackend.Models.User", "Customer")
                        .WithMany("KitCustomers")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK__Kit__customerID__5165187F");

                    b.HasOne("DNASystemBackend.Models.User", "Staff")
                        .WithMany("KitStaffs")
                        .HasForeignKey("StaffId")
                        .HasConstraintName("FK__Kit__staffID__52593CB8");

                    b.Navigation("Customer");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("DNASystemBackend.Models.TestResult", b =>
                {
                    b.HasOne("DNASystemBackend.Models.User", "Customer")
                        .WithMany("TestResultCustomers")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK__TestResul__custo__534D60F1");

                    b.HasOne("DNASystemBackend.Models.Service", "Service")
                        .WithMany("TestResults")
                        .HasForeignKey("ServiceId")
                        .HasConstraintName("FK__TestResul__servi__5441852A");

                    b.HasOne("DNASystemBackend.Models.User", "Staff")
                        .WithMany("TestResultStaffs")
                        .HasForeignKey("StaffId")
                        .HasConstraintName("FK__TestResul__staff__5535A963");

                    b.Navigation("Customer");

                    b.Navigation("Service");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("DNASystemBackend.Models.User", b =>
                {
                    b.HasOne("DNASystemBackend.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK__Users__roleID__5629CD9C");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("DNASystemBackend.Models.Booking", b =>
                {
                    b.Navigation("Invoices");
                });

            modelBuilder.Entity("DNASystemBackend.Models.Invoice", b =>
                {
                    b.Navigation("InvoiceDetails");
                });

            modelBuilder.Entity("DNASystemBackend.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("DNASystemBackend.Models.Service", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("Feedbacks");

                    b.Navigation("InvoiceDetails");

                    b.Navigation("TestResults");
                });

            modelBuilder.Entity("DNASystemBackend.Models.User", b =>
                {
                    b.Navigation("BookingCustomers");

                    b.Navigation("BookingStaffs");

                    b.Navigation("Courses");

                    b.Navigation("Feedbacks");

                    b.Navigation("KitCustomers");

                    b.Navigation("KitStaffs");

                    b.Navigation("TestResultCustomers");

                    b.Navigation("TestResultStaffs");
                });
#pragma warning restore 612, 618
        }
    }
}
